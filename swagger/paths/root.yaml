get:
  description: Root url of the
  produces:
  - text/plain; charset=utf-8
  responses:
    '200':
      description: API Gateway is healthy
      schema:
        $ref: '#/definitions/Empty'


x-amazon-apigateway-any-method:
  produces:
  - application/json
  responses:
    200:
      description: 200 response
      schema:
        $ref: "#/definitions/Empty"

x-amazon-apigateway-integration:
    responses:
      default:
        statusCode: 200
    uri: arn:aws:apigateway:YOUR_AWS_REGION:lambda:path/2015-03-31/functions/arn:aws:lambda:YOUR_AWS_REGION:YOUR_ACCOUNT_ID:function:AwsServerlessExpressFunction/invocations
    passthroughBehavior: when_no_match
    httpMethod: POST
    type: aws_proxy
options:
  consumes:
  - application/json
  produces:
  - application/json
  responses:
    200:
      description: 200 response
      schema:
        $ref: "#/definitions/Empty"
      headers:
        Access-Control-Allow-Origin:
          type: string
        Access-Control-Allow-Methods:
          type: string
        Access-Control-Allow-Headers:
          type: string

x-amazon-apigateway-integration:
    responses:
      default:
        statusCode: 200
        responseParameters:
          method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
          method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
          method.response.header.Access-Control-Allow-Origin: "'https://example.com'"
    passthroughBehavior: when_no_match
    requestTemplates:
      application/json: "{\"statusCode\": 200}"
    type: mock